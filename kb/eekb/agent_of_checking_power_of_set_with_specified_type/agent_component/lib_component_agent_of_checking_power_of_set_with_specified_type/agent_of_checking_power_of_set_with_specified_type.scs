agent_of_checking_power_of_set_with_specified_type
=> nrel_main_idtf:
	[агентная scp-программа проверки соответствия мощности множеств с указанным типом] (* <- lang_ru;; *);
	[agent scp-program of veification of compliance power sets with the specified type] (* <- lang_en;; *);
	<- agent_scp_program;;

scp_program -> agent_of_checking_power_of_set_with_specified_type 
	(*
	-> rrel_params: .agent_proc_type_power_checker_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_of_checking_power_of_set_with_specified_type_operator_set 
		(*
		-> rrel_init: .agent_proc_type_power_checker_operator1 
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;

			=> nrel_then: .agent_proc_type_power_checker_operator2;;
			*);;

        -> .agent_proc_type_power_checker_operator2 
        	(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: action_of_checking_power_of_set_with_specified_type;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .agent_proc_type_power_checker_operator3;;
			=> nrel_else: .agent_proc_type_power_checker_operator_return;;
			*);;

		-> .agent_proc_type_power_checker_operator3
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _struct;;

			=> nrel_then: .agent_proc_type_power_checker_operator_validate_input_param;;
			=> nrel_else: .agent_proc_type_power_checker_operator_return;;
			*);;

		-> .agent_proc_type_power_checker_operator_validate_input_param
        	(*
		    <- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_validation_section_subject_domain_input_param;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_type_power_checker_operator_validate_input_param_params 
		  		(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;; 
				-> rrel_2: rrel_fixed: rrel_scp_var: _struct;;				                           
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr111;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_validate_input_param_wait;;
			*);;

		-> .agent_proc_type_power_checker_operator_validate_input_param_wait 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr111;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_gen_incorrect_elems;;
			*);;
		           	            
        -> .agent_proc_type_power_checker_operator_gen_incorrect_elems
        	(*
		 	<- genEl;;

		 	-> rrel_1: rrel_assign: rrel_node: rrel_struct: rrel_scp_var: _incorrect_elems;;

		 	=> nrel_goto: .agent_proc_type_power_checker_operator_call_geo_pair;;
		 	*);;

        -> .agent_proc_type_power_checker_operator_call_geo_pair
        	(*
		    <- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_checking_power_of_set_with_specified_type;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_type_power_checker_operator_call_geo_pair_params 
		  		(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _incorrect_elems;; 
				-> rrel_2: rrel_fixed: rrel_scp_const: concept_pair_of_points;;
				-> rrel_3: rrel_fixed: rrel_scp_const: [2];;
				-> rrel_4: rrel_fixed: rrel_scp_var: _struct;;                               
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_call_geo_pair_wait;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_geo_pair_wait 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_call_geo_triple;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_geo_triple
        	(*
		    <- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_checking_power_of_set_with_specified_type;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_type_power_checker_operator_call_geo_triple_params 
		  		(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _incorrect_elems;; 
				-> rrel_2: rrel_fixed: rrel_scp_const: concept_triple_of_points;;
				-> rrel_3: rrel_fixed: rrel_scp_const: [3];;
				-> rrel_4: rrel_fixed: rrel_scp_var: _struct;; 				                               
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_call_geo_triple_wait;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_geo_triple_wait 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_call_ims_pair;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_ims_pair
        	(*
            <- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_checking_power_of_set_with_specified_type;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_type_power_checker_operator_call_ims_pair_params 
		  		(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _incorrect_elems;; 
				-> rrel_2: rrel_fixed: rrel_scp_const: pair_set;;
				-> rrel_3: rrel_fixed: rrel_scp_const: [2];;
				-> rrel_4: rrel_fixed: rrel_scp_var: _struct;;                               
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descr11;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_call_ims_pair_wait;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_ims_pair_wait 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr11;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_call_ims_triple;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_ims_triple
        	(*
		    <- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_checking_power_of_set_with_specified_type;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_type_power_checker_operator_call_ims_triple_params 
		  		(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _incorrect_elems;; 
				-> rrel_2: rrel_fixed: rrel_scp_const: triple_set;;
				-> rrel_3: rrel_fixed: rrel_scp_const: [3];;
				-> rrel_4: rrel_fixed: rrel_scp_var: _struct;; 				                               
				*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr22;;

		  => nrel_goto: .agent_proc_type_power_checker_operator_call_ims_triple_wait;;
			*);;

		-> .agent_proc_type_power_checker_operator_call_ims_triple_wait 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descr22;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_gen_verification_answer;;
			*);;

		-> .agent_proc_type_power_checker_operator_gen_verification_answer
			(*
		 	<- call;;

		  	-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_generation_of_verification_answer;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_type_power_checker_operator_gen_verification_answer_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: action_of_checking_power_of_set_with_specified_type;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _incorrect_elems;;
				-> rrel_4: rrel_fixed: rrel_scp_const: wrong_parameters;;
				*);;
		  	-> rrel_3: rrel_assign: rrel_scp_var: _descrV;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_waitreturn_generation_verification_answer;;
			*);;

		-> .agent_proc_type_power_checker_operator_waitreturn_generation_verification_answer 
			(*
		  	<- waitReturn;;

		  	-> rrel_1: rrel_fixed: rrel_scp_var: _descrV;;

		  	=> nrel_goto: .agent_proc_type_power_checker_operator_return;;
			*);;

		-> .agent_proc_type_power_checker_operator_return 
			(*
		 	<- return;;
			*);;
	*);;
*);;
